@use "functions" as *;
@use "fonts" as *;
@use "../globals/colors" as *;
@use "breakpoint" as *;
@mixin list {
  width: fit-content;
  position: relative;
  cursor: pointer;
}
@mixin underline {
  &:not([aria-selected="true"]) {
    &::after {
      content: " ";
      position: absolute;
      transform: scaleX(0);
      left: 0;
      bottom: 0px;
      height: 2px;
      width: 100%;
      background-color: $white;
      opacity: 0.25;
      transition: transform 0.3s ease-in;
      transform-origin: bottom right;
    }
    &:hover::after {
      transform: scaleX(1);
      transform-origin: bottom left;
    }
  }
}
.flex {
  display: flex;
  gap: gap(--gap, 1rem);
}
.grid {
  display: grid;
  gap: gap(--gap, 1rem);
}
.container {
  padding-inline: 2em;
  max-width: 80rem;
  margin-inline: auto;
}
.grid-container {
  display: grid;
  place-items: center;
  text-align: center;
  padding-inline: 1rem;
  padding-bottom: 3rem;
  & > * {
    max-width: 50ch;
  }
  @include breakPoint-down(large) {
    text-align: left;
    column-gap: gap(--gap, 2rem);
    grid-template-columns: minmax(2rem, 1fr) repeat(2, minmax(0, 40rem)) minmax(
        2rem,
        1fr
      );
    //padding-bottom: max(6rem, 20vh);
    align-items: end;
    & > *:first-child {
      grid-column: 2;
    }
    & > *:last-child {
      grid-column: 3;
    }
  }
}
.screenReader-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/*select everything that has a sibling before it*/
.flow > * + * {
  margin-top: var(--flow-space, 1rem);
}
.number {
  font-family: $ff-barlowCondensed;
  font-size: $fs-500;
  text-transform: uppercase;
  letter-spacing: 0.295rem;
}
.number span {
  margin-right: 0.5rem;
  font-weight: 700;
  color: $white;
  opacity: 25%;
}
.lg-btn {
  font-size: 2rem;
  text-transform: uppercase;
  text-decoration: none;
  border-radius: 50%;
  padding: 0 2em;
  display: inline-grid;
  place-items: center;
  aspect-ratio: 1;
  transition: 0.3s ease-in;
  &:hover {
    box-shadow: 2px 2px 1px 80px rgba(100, 100, 100, 0.2);
  }
}

[aria-selected="true"] {
  border-bottom: 3px solid white;
  color: white;
}
ol {
  list-style-type: none;
  counter-reset: li;
  li {
    @include list;
    width: max-content;
    &::before {
      counter-increment: li;
      content: counter(li, decimal-leading-zero);
      margin-right: 0.5em;
      font-weight: 700;
    }
    @include underline;
  }
}

ul {
  list-style: none;
  li {
    @include list;
    @include underline;
  }
}
.dot-indicator {
  [aria-selected="true"] {
    border: none;
    opacity: 1;
  }
  button {
    cursor: pointer;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background-color: $white;
    opacity: 0.25;
    transition: opacity 0.3s ease-in;
    &:not([aria-selected="true"]) {
      &:hover {
        opacity: 0.75;
      }
    }
  }
}

.nmbr-link {
  width: 200px;
  height: 200px;
  gap: 5px;
  [aria-selected="true"] {
    border: none;
    background-color: $white;
    color: $dark;
  }
  button {
    background-color: $dark;
    color: $white;
    font-size: 1.5rem;
    display: block;
    border-radius: 50%;
    aspect-ratio: 1;
    border: 2px solid rgba(100, 100, 100, 0.5);
    transition: border-color 0.3s ease-in;
    &:hover {
      border-color: $white;
    }
  }
}
.t-zero {
  transform: translateX(0) !important;
}

.logo {
  margin: 1.5rem clamp(1.5rem, 5vw, 3.5rem);
}

.header {
  justify-content: space-between;

  @include breakPoint-down(large) {
    align-items: center;
    &::after {
      content: "";
      display: block;
      position: relative;
      height: 1px;
      width: 100%;
      background: $light;
      order: 1;
      margin-right: -2.5rem;
    }
  }
}
.nav-toggle {
  display: none;
  @include breakPoint(medium) {
    display: block;
    position: absolute;
    z-index: 20;
    top: 2rem;
    right: 1rem;
    width: 1.5rem;
    background: transparent;
    background-image: url("../../img/shared/icon-hamburger.svg");
    background-repeat: no-repeat;
    aspect-ratio: 1;
  }
}
nav {
  order: 2;
}
#navigation {
  background: rgba(0, 0, 0, 0.95);
  padding: 1.5em 0em;
  gap: clamp(1.5rem, 5vw, 3.5rem);
  @include breakPoint(medium) {
    flex-direction: column;
    position: fixed;
    inset: 0 0 0 30%;
    z-index: 10;
    padding: min(20rem, 15vh) 2rem;
    gap: 2.5rem;
    transform: translateX(100%);
    transition: transform 0.6s ease-in;
    li {
      &:hover::after {
        transform: scaleX(0);
      }
    }
  }
  @media (min-width: 35em) and (max-width: 45em) {
    padding-inline: 2rem;
    li {
      &::before {
        display: none;
      }
    }
  }
  @include breakPoint-down(medium) {
    padding-inline: clamp(3rem, 5vw, 7rem);
  }
  @include breakPoint-down(large) {
    margin-block: 2rem;
  }
}
@supports (backdrop-filter: blur(1rem)) {
  #navigation {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(2rem);
  }
}
